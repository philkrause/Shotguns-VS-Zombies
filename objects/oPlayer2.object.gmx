<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerLegs</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

image_speed = 5 / room_speed


Facing = 0
WeaponCount = 0
SelectedWeaponIndex = 0

xShunt = 0
yShunt = 0

IntTimer=0


ShotgunTimer = 0

PlayerHealth = 100

image_speed = 6 / room_speed

globalvar PlayerHealth
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
  Facing = point_direction(x, y, mouse_x, mouse_y)
  
  


  
    PlayerSpeed = 400/ room_speed
        
        speed = 0
       
        
    
        
            
                //Stay on Screen
        if x &lt; 0 {x = 0}
        if x &gt; room_width {x = room_width}
        if y &lt; 0 {y = 0}
        if y &gt; room_height {y = room_height} 


// Taking Damage
if place_meeting(x, y, oZombie) {
                
                BloodSplatter()
                
                global.PlayerHealth = global.PlayerHealth -1
                
         
                
}         
               
        //Player Movement
      
 
           
        // Player Movement
        if keyboard_check(ord('W'))   {
        vspeed = -PlayerSpeed
        
        
        //audio_play_sound(aPlayerWalking,0,0)
       
        }
            
           
        if keyboard_check(ord('S'))   {
        vspeed = PlayerSpeed 
       // audio_play_sound(aPlayerWalking,0,0)
        
        }
           
        
            
        if keyboard_check(ord('A')) {
        hspeed = -PlayerSpeed 
       // audio_play_sound(aPlayerWalking,0,0)
       
        }
           
        
          
        if keyboard_check(ord('D'))   {
        hspeed = PlayerSpeed 
        
      
       
        }
           
        
  //Walking Audio 
if abs(speed) &gt; 0 then {
        IntTimer += 1 
        if IntTimer &gt; 25  then {
            audio_play_sound(aPlayerWalking, 0, 0)
            IntTimer = 0
        }
}   
           
  //shotgun pickup audio
  
if place_meeting(x,y,oShotgun){

        ShotgunTimer += 1 
        if  ShotgunTimer = 10  then {
            audio_play_sound(aShotgunPump, 0, 0)
             ShotgunTimer = -99999
             
        }
sound_stop(aShotgunPump)
}


           
image_speed = speed / 40   
  
    
        //Kick
        hspeed = hspeed + xShunt
        vspeed = vspeed + yShunt
        
        ResetShunts()
        

        
        
               
        //Weapon Switching
        if mouse_check_button_pressed(mb_right) {
        
            //Switch to Next Weapon
                SelectedWeaponIndex = SelectedWeaponIndex + 1
            //If We have gone too far , start over to weapon 0
                if SelectedWeaponIndex &gt;= WeaponCount {
                    SelectedWeaponIndex = 0
            }
        }
        
      
        
        
        
        //Collision so we dont get stuck in walls
        //Where will be when we add our speed to our position? AND If we meet with Solid
        if place_meeting(x + hspeed, y + vspeed, oSolid){
                OriginalHSpeed = hspeed
                hspeed = 0
                while
                    place_meeting(x + hspeed + sign(OriginalHSpeed), y, oSolid) = false &amp;&amp;
                    abs(hspeed) &lt; abs(OriginalHSpeed) //Check we havent restored all of original hspeed, and only pay attention to the absolute values,(magnitudes)
                {
            //Creep toward original hspeed
            hspeed = hspeed + sign(OriginalHSpeed)
                }
        
        //We have now figured out how much of our hspeed we can keep without hitting anything. 
            
                OriginalVSpeed = vspeed
                vspeed = 0
                while
                    place_meeting(x + hspeed, y + vspeed + sign(OriginalVSpeed), oSolid) = false &amp;&amp;
                    abs(vspeed) &lt; abs(OriginalVSpeed) //Check we havent restored all of original hspeed, and only pay attention to the absolute values,(magnitudes)
                {   
                //Creep toward original hspeed
                vspeed = vspeed + sign(OriginalVSpeed)
            
                }
        
        }







//Death

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw our sprite normally, but facing our "Facing direction, without changing image_angle, so as not to effect collision. 

ShotgunLocation = instance_place(x,y,oShotgun)


if instance_exists(ShotgunLocation) {
    draw_sprite_ext(sShotgun,1,x,y,image_xscale,image_yscale,Facing,image_blend,image_alpha) 
    }else{
    
    draw_sprite_ext(sPlayer1,image_index,x,y,image_xscale,image_yscale,Facing,image_blend,image_alpha) 
    //Player Legs

}

draw_sprite_ext(sPlayerLegs,image_index,x,y,image_xscale,image_yscale,Facing,image_blend,image_alpha) 

 






//draw_sprite(sprite_index,image_index, x, y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
