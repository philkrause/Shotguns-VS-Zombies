<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShotgun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -10
ShotgunAmmoCollected = 0
ShotgunAmmoMax = 12
global.CurrentShotgunAmmo = 0

Owner = noone

SecondsBetweenShots = 1.4
SecondsSinceLastShot = 0
IntTimer = 0


ResetShunts()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 

if instance_exists(Owner) {
    
    visible = false
    x = Owner.x
    y = Owner.y
    
    image_angle = Owner.Facing

    
   
      
        

if Owner.Weapon[Owner.SelectedWeaponIndex] = self.id{
         SecondsSinceLastShot = SecondsSinceLastShot + 1 /room_speed
         
      
        
           
        if global.PlayerHealth &gt; 0 {     
    
            if mouse_check_button(mb_left) and SecondsSinceLastShot &gt;= SecondsBetweenShots and CurrentShotgunAmmo &gt; 0 {
                          
                        audio_play_sound(aShotgun, 0, 0)
                        
                        global.CurrentShotgunAmmo = global.CurrentShotgunAmmo - 1
                        
                        MyBullet1 = instance_create(x, y,oBullet)
                        MyBullet1.direction = direction.Facing
                        MyBullet1.speed = 2000/room_speed
                        
                        MyBullet2 = instance_create(x,y,oBullet)
                        MyBullet2.direction = direction.Facing + 10
                        MyBullet2.speed = 2000/room_speed
                        
                        MyBullet3 = instance_create(x,y,oBullet)
                        MyBullet3.direction = direction.Facing - 10
                        MyBullet3.speed = 2000/room_speed
                        
                        MyBullet3 = instance_create(x,y,oBullet)
                        MyBullet3.direction = direction.Facing + 15
                        MyBullet3.speed = 2000/room_speed
                        
                        MyBullet4 = instance_create(x,y,oBullet)
                        MyBullet4.direction = direction.Facing - 15
                        MyBullet4.speed = 2000/room_speed
                        
                        Kick = 200/room_speed
                        KickDirection = image_angle + 180
                        
                        Owner.xShunt = lengthdir_x(Kick, KickDirection)
                        Owner.yShunt = lengthdir_y(Kick, KickDirection)
                        
                        SecondsSinceLastShot = 0
                        
                        
                        
                        } else if mouse_check_button_pressed(mb_left) and CurrentShotgunAmmo &lt;= 0 {   
                          audio_play_sound(aNoMoreAmmo, 0, 0)
                          
                        }
                         
                
          }
}
//ShotGunAmmoCollected

    //Shotgun ammo maxes out           
    if CurrentShotgunAmmo &gt;= ShotgunAmmoMax {CurrentShotgunAmmo = ShotgunAmmoMax}
          
                 
    if CurrentShotgunAmmo &lt; ShotgunAmmoMax {
                
                
                ShotgunAmmoLocation = instance_place(x, y, oShotgunAmmo)
                if instance_exists(ShotgunAmmoLocation){
                    
                    global.CurrentShotgunAmmo = global.CurrentShotgunAmmo + 6  
                     
                    audio_play_sound(aShotgunReload, 0, 0)
                    with ShotgunAmmoLocation {instance_destroy()}
                } 
                       
    }
   }else { image_index = 0}
   
   if CurrentShotgunAmmo = 0 and !instance_exists(oShotgunAmmo)
    {
        instance_create(random(room_width),random(room_height),oShotgunAmmo)
    }
  
CanBePickedUp()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
