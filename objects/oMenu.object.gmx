<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar EnemyDeaths;

globalvar PlayerHealth;
PlayerHealth = 100;



Mode = "Titles"


globalvar GamePoints;
GamePoints = 0;

InitializeRoom2()

globalvar CurrentShotgunAmmo;
CurrentShotunAmmo = 6;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed (vk_escape){

    if Mode = "Game" {Mode = "Titles"}
          else {
          Mode = "Game"
          }

}       




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if Mode = "Titles" {
    
     x = view_wport[0] / 2
     y = 0
    MouseX = mouse_x
    MouseY = mouse_y

    draw_sprite(sCursor,0, MouseX, MouseY)
    CurrentY = y + 600
    Margin = 7
     
     
    draw_set_halign(fa_center)
    
    draw_set_font(fTitle2)
    
    DrawTextAndUpdateCurrentY("")
       
    
    CurrentY = CurrentY + 50
    
    draw_set_font(fTitle)
    
    //go to next room
    if ButtonPressed("*CLICK HERE*"){ 
             Mode = "Game"
             room_goto((rLevel1))
             
             }
           
       
    
    if ButtonPressed("Quit"){
        game_end()
    }
    
    

}     else if Mode = "Game"{
      
       
        
             
             if instance_exists(oPlayer1) {
                BarIndent = 50
                BarWidth = view_wport - (BarIndent * 2)
                BarHeight = 20
                BarTop = (view_hport - BarIndent) - BarHeight
                
                 //Points HUD
         
                draw_set_color(c_yellow)
                draw_set_font(fGamePoints)
                
                draw_text(x + 605 ,y ,"SCORE: "+string(global.GamePoints)) 
                
                //Player Health
                
                
                draw_set_color(c_green)
                draw_set_font(fPlayerHealth)
                
                draw_text(x + 605 ,y + 1000 ,"PlayerHealth: "+string(global.PlayerHealth)) 
             
                 /*Make Ammo HUD
               
                
                draw_set_color(c_orange)
                draw_set_font(fAmmo)
                
                if global.CurrentShotgunAmmo = 0{draw_text(x - 750, y + 1015, "Shotgun Shells: 0 / 12")}
                if global.CurrentShotgunAmmo = 1{draw_text(x - 750, y + 1015, "Shotgun Shells: 1 / 12")}
                if global.CurrentShotgunAmmo = 2{draw_text(x - 750, y + 1015, "Shotgun Shells: 2 / 12")}
                if global.CurrentShotgunAmmo = 3{draw_text(x - 750, y + 1015, "Shotgun Shells: 3 / 12")}
                if global.CurrentShotgunAmmo = 4{draw_text(x - 750, y + 1015, "Shotgun Shells: 4 / 12")}
                if global.CurrentShotgunAmmo = 5{draw_text(x - 750, y + 1015, "Shotgun Shells: 5 / 12")}
                if global.CurrentShotgunAmmo = 6{draw_text(x - 750, y + 1015, "Shotgun Shells: 6 / 12")}
                if global.CurrentShotgunAmmo = 7{draw_text(x - 750, y + 1015, "Shotgun Shells: 7 / 12")}
                if global.CurrentShotgunAmmo = 8{draw_text(x - 750, y + 1015, "Shotgun Shells: 8 / 12")}
                if global.CurrentShotgunAmmo = 9{draw_text(x - 750, y + 1015, "Shotgun Shells: 9 / 12")}
                if global.CurrentShotgunAmmo = 10{draw_text(x - 750, y + 1015,"Shotgun Shells: 10 / 12")}
                if global.CurrentShotgunAmmo = 11{draw_text(x - 750, y + 1015,"Shotgun Shells: 11 / 12")}
                if global.CurrentShotgunAmmo = 12{draw_text(x - 750, y + 1015, "Shotgun Shells: 12 / 12")}
                //draw_rectangle(BarIndent, BarTop, BarWidth, Bartop + BarHeight, true)
                //draw_rectangle(BarIndent, BarTop, BarIndent + BarWidth, Bartop + BarHeight, false)
                
                draw_set_alpha(1) */
             }
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
